/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package trampoline;

import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Kieran
 */
public class ManageTags extends javax.swing.JFrame {

    private MessageHandler messageHandler_;
    private DBConnect db_;
    private int gid_;
    
    /**
     * Creates new form ManageTags
     */
    public ManageTags(MessageHandler messageHandler, DBConnect db, int gid) {
        this.messageHandler_ = messageHandler;
        this.db_ = db;
        this.gid_ = gid;
        initComponents();
        DefaultListModel lstTagsModel = new DefaultListModel();
        lstTags.setModel(lstTagsModel);
        populateTags();
  
    }
    
    private void populateTags(){
        
        Map<Integer, String> tagMapToF = db_.getTags(this.gid_);
        DefaultListModel lstTagsModel = (DefaultListModel)lstTags.getModel();
        lstTagsModel.clear();
        for(int tagId : tagMapToF.keySet()){
            ComboItem newTag = new ComboItem(tagId,tagMapToF.get(tagId));
            lstTagsModel.addElement(newTag);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddTag = new javax.swing.JButton();
        btnEditTag = new javax.swing.JButton();
        btnDeleteTag = new javax.swing.JButton();
        sclTags = new javax.swing.JScrollPane();
        lstTags = new javax.swing.JList();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Tags");
        setAlwaysOnTop(true);
        setName("frmManageTags");

        btnAddTag.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAddTag.setText("Add Tag");
        btnAddTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTagActionPerformed(evt);
            }
        });

        btnEditTag.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnEditTag.setText("Edit Tag");
        btnEditTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditTagActionPerformed(evt);
            }
        });

        btnDeleteTag.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDeleteTag.setText("Delete Tag");
        btnDeleteTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTagActionPerformed(evt);
            }
        });

        lstTags.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lstTags.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        sclTags.setViewportView(lstTags);

        btnClose.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnClose.setText("Close Window");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Current Tags:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sclTags, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddTag)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditTag)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteTag)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose))
                    .addComponent(sclTags, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTagActionPerformed
        String newTag = (String)JOptionPane.showInputDialog(this,"Please enter the name for the new Tag:","Add New Tag",
                                                            JOptionPane.QUESTION_MESSAGE,null,null,"");
        if(newTag.equals("")){
            messageHandler_.setError(11);
            JOptionPane.showMessageDialog(this, messageHandler_.getCurrentErrorLong(),messageHandler_.getCurrentErrorShort(),JOptionPane.OK_OPTION);
            messageHandler_.clearError();
        }else{
            Map<Integer, String> tagMapToF = db_.getTags(this.gid_);

            boolean differentName = true;
            for(String tags : tagMapToF.values()){
                if(tags.equals(newTag)){
                    differentName = false;
                }
            }

            if(differentName){
                db_.addTag(this.gid_,newTag);
            }else{
                messageHandler_.setError(11);
                JOptionPane.showMessageDialog(this, messageHandler_.getCurrentErrorLong(),messageHandler_.getCurrentErrorShort(),JOptionPane.OK_OPTION);
                messageHandler_.clearError();
            }
        }
        
        populateTags();
    }//GEN-LAST:event_btnAddTagActionPerformed

    private void btnEditTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditTagActionPerformed
        Object[] selectedTags = lstTags.getSelectedValues();
        
        if(selectedTags.length>1 || selectedTags.length==0){
            JOptionPane.showMessageDialog(this, "Please select at least one tag from the list.","Select A Tag",JOptionPane.ERROR_MESSAGE);
        }else{
            String newTag = (String)JOptionPane.showInputDialog(this,"Please enter the new name for the tag:","Edit New Tag",
                                                            JOptionPane.QUESTION_MESSAGE,null,null,"");
            if(newTag.equals("")){
                messageHandler_.setError(11);
                JOptionPane.showMessageDialog(this, messageHandler_.getCurrentErrorLong(),messageHandler_.getCurrentErrorShort(),JOptionPane.OK_OPTION);
                messageHandler_.clearError();
            }else{
                Map<Integer, String> tagMapToF = db_.getTags(this.gid_);

                boolean differentName = true;
                for(String tags : tagMapToF.values()){
                    if(tags.equals(newTag)){
                        differentName = false;
                    }
                }

                if(differentName){
                    db_.editTag(((ComboItem)selectedTags[0]).getNumericID(),newTag);
                }else{
                    messageHandler_.setError(11);
                    JOptionPane.showMessageDialog(this, messageHandler_.getCurrentErrorLong(),messageHandler_.getCurrentErrorShort(),JOptionPane.ERROR_MESSAGE);
                    messageHandler_.clearError();
                }
            }
        }
        populateTags();
    }//GEN-LAST:event_btnEditTagActionPerformed

    private void btnDeleteTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTagActionPerformed
        Object[] selectedTags = lstTags.getSelectedValues();
        if(selectedTags.length>0){
            int confirmInt=1;
            if(selectedTags.length>1){
                confirmInt = (int) JOptionPane.showConfirmDialog(this, "Are you sure you want to delete these '"+selectedTags.length+"' tags?", "Delete Tags", 0, 0);
            }else if(selectedTags.length==1){
                confirmInt = (int) JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the tag '"+((ComboItem)selectedTags[0]).getName()+"'?", "Delete Tag", 0, 0);
            }
            
            if(confirmInt ==0){
                for(Object tag:selectedTags){
                    db_.deleteTag(((ComboItem)tag).getNumericID());
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please select at least one tag from the list.","Select A Tag",JOptionPane.ERROR_MESSAGE);
        }
        
        populateTags();
    }//GEN-LAST:event_btnDeleteTagActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTag;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDeleteTag;
    private javax.swing.JButton btnEditTag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList lstTags;
    private javax.swing.JScrollPane sclTags;
    // End of variables declaration//GEN-END:variables
}
